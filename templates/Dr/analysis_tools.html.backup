{% extends "clinical_base.html" %}

{% block title %}分析工具 - 医学临床科研专病数据管理平台{% endblock %}

{% block extra_css %}
<style>
/* 分析工具页面特定样式 */
.analysis-container {
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: 20px;
    margin-bottom: 20px;
}

/* 工具内容区 */
.tool-content {
    display: flex;
    flex-direction: column;
    gap: 20px;
}

/* 结果预览区 */
.result-area {
    display: flex;
    flex-direction: column;
    gap: 20px;
}

/* 工具面板 */
.tool-panel {
    display: none;
}

.tool-panel.active {
    display: block;
}

/* 工具项目样式 */
.tool-item {
    padding: 10px;
    border-radius: 6px;
    margin-bottom: 6px;
    cursor: pointer;
    transition: all 0.2s;
    display: flex;
    align-items: center;
    gap: 8px;
}

.tool-item:hover {
    background-color: #f0f7ff;
}

.tool-item.active {
    background-color: #e3f2fd;
    color: #0d6efd;
    font-weight: 500;
}

/* 表单和表单控件样式 */
.form-group {
    margin-bottom: 15px;
}

.form-group label {
    display: block;
    margin-bottom: 5px;
    font-weight: 500;
}

.dataset-select-options {
    margin-bottom: 10px;
}

.variables-container {
    border: 1px solid #ddd;
    border-radius: 4px;
    max-height: 200px;
    overflow-y: auto;
    padding: 10px;
}

.variable-category {
    font-weight: 500;
    margin: 5px 0;
}

.variable-selector {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-bottom: 10px;
}

.option-selectors {
    display: flex;
    flex-wrap: wrap;
    gap: 15px;
}

.form-actions {
    display: flex;
    gap: 10px;
    margin-top: 20px;
}

/* 结果预览区样式 */
.result-preview {
    min-height: 200px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.result-placeholder {
    text-align: center;
    color: #aaa;
}

.result-placeholder i {
    font-size: 40px;
    margin-bottom: 10px;
    display: block;
}

/* 导出选项样式 */
.export-format-options,
.export-options {
    display: flex;
    flex-direction: column;
    gap: 8px;
    margin-top: 5px;
}

/* 响应式布局 */
@media (max-width: 1200px) {
    .analysis-container {
        grid-template-columns: 3fr 2fr;
    }
}

@media (max-width: 992px) {
    .analysis-container {
        grid-template-columns: 1fr;
    }
    
    .result-area {
        margin-top: 20px;
    }
}

/* 修复顶部导航样式 */
.top-navigation {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: white;
    border-radius: 8px;
    margin-bottom: 20px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.05);
    padding: 10px 15px;
}

.top-nav-left {
    display: flex;
    align-items: center;
}

.top-nav-right {
    display: flex;
    gap: 10px;
}

/* 确保内容区域样式 */
.tool-description p {
    margin-bottom: 15px;
    line-height: 1.5;
}

.coming-soon {
    text-align: center;
    padding: 30px 0;
    color: #888;
}

.coming-soon i {
    font-size: 40px;
    margin-bottom: 10px;
    display: block;
}
</style>
{% endblock %}

{% block custom_sidebar %}
<!-- 工具列表 -->
<div class="clinical-info-box sidebar-box">
                <div class="info-box-title">
                    <i class="bi bi-tools"></i> 分析工具集
                </div>
                <div class="info-box-content">
                    <div class="tools-list">
                        <div class="tool-category">
                            <div class="category-header">
                                <i class="bi bi-graph-up"></i> 统计分析
                            </div>
                            <div class="tool-item active" data-tool="descriptive">
                                <i class="bi bi-clipboard-data"></i> 描述性统计
                            </div>
                            <div class="tool-item" data-tool="hypothesis">
                                <i class="bi bi-123"></i> 假设检验
                            </div>
                            <div class="tool-item" data-tool="correlation">
                                <i class="bi bi-arrow-down-up"></i> 相关性分析
                            </div>
                            <div class="tool-item" data-tool="regression">
                                <i class="bi bi-graph-up-arrow"></i> 回归分析
                            </div>
                        </div>
                        
                        <div class="tool-category">
                            <div class="category-header">
                                <i class="bi bi-file-medical"></i> 临床分析
                            </div>
                            <div class="tool-item" data-tool="survival">
                                <i class="bi bi-activity"></i> 生存分析
                            </div>
                            <div class="tool-item" data-tool="risk">
                                <i class="bi bi-shield-check"></i> 风险评估
                            </div>
                            <div class="tool-item" data-tool="outcome">
                                <i class="bi bi-clipboard-check"></i> 结局预测
                            </div>
                        </div>
                        
                        <div class="tool-category">
                            <div class="category-header">
                                <i class="bi bi-pie-chart"></i> 可视化
                            </div>
                            <div class="tool-item" data-tool="charts">
                                <i class="bi bi-bar-chart"></i> 图表生成
                            </div>
                            <div class="tool-item" data-tool="reports">
                                <i class="bi bi-file-earmark-text"></i> 自动报告
                            </div>
                        </div>
                    </div>
                </div>
</div>
{% endblock %}

{% block content %}
<!-- 顶部导航栏 -->
<div class="top-navigation">
    <div class="top-nav-left">
        <div class="content-title">
            分析工具 <i class="bi bi-bar-chart-line"></i>
        </div>
    </div>
    <div class="top-nav-right">
        <a href="javascript:void(0)" class="clinical-button secondary" onclick="openExportModal()">
            <i class="bi bi-download"></i> 导出数据
        </a>
            </div>
        </div>

<!-- 主内容区域容器 -->
<div class="analysis-container">
    <!-- 左侧：工具内容区 -->
    <div class="tool-content">
            <!-- 描述性统计工具 -->
            <div class="tool-panel active" id="descriptive-panel">
                <div class="clinical-info-box">
                    <div class="info-box-title">
                        <i class="bi bi-clipboard-data"></i> 描述性统计
                    </div>
                    <div class="info-box-content">
                        <div class="tool-description">
                            <p>描述性统计工具可帮助您计算并可视化数据集中变量的基本统计信息，包括均值、中位数、标准差、四分位数等。</p>
                        </div>
                        
                        <form class="analysis-form">
                            <div class="form-group">
                                <label for="dataset-select">选择数据集</label>
                                <div class="dataset-select-options">
                                    <label class="select-all-option"><input type="checkbox" id="select-all-datasets"> 选择全部可访问的数据集</label>
                                <select class="form-control" id="dataset-select" required>
                                    <option value="">-- 请选择数据集 --</option>
                                    {% for dataset in available_datasets %}
                                    <option value="{{ dataset.id }}">{{ dataset.name }}</option>
                                    {% endfor %}
                                </select>
                                    <div class="dataset-selection-status" id="dataset-selection-status" style="display: none;">
                                        已选择全部 <span class="dataset-count">0</span> 个可访问的数据集
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label>选择变量</label>
                                <div class="variables-container">
                                    <div class="variables-list">
                                        <div class="variable-category">连续变量</div>
                                        <div class="variable-selector">
                                            <label><input type="checkbox" name="variables" value="age"> 年龄</label>
                                            <label><input type="checkbox" name="variables" value="bmi"> BMI</label>
                                            <label><input type="checkbox" name="variables" value="glucose"> 血糖</label>
                                            <label><input type="checkbox" name="variables" value="bp"> 血压</label>
                                        </div>
                                        
                                        <div class="variable-category">分类变量</div>
                                        <div class="variable-selector">
                                            <label><input type="checkbox" name="variables" value="gender"> 性别</label>
                                            <label><input type="checkbox" name="variables" value="smoking"> 吸烟史</label>
                                            <label><input type="checkbox" name="variables" value="diabetes"> 糖尿病</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label>统计选项</label>
                                <div class="option-selectors">
                                    <label><input type="checkbox" name="stats" value="mean" checked> 均值</label>
                                    <label><input type="checkbox" name="stats" value="median" checked> 中位数</label>
                                    <label><input type="checkbox" name="stats" value="sd" checked> 标准差</label>
                                    <label><input type="checkbox" name="stats" value="min" checked> 最小值</label>
                                    <label><input type="checkbox" name="stats" value="max" checked> 最大值</label>
                                    <label><input type="checkbox" name="stats" value="q1"> 第一四分位数</label>
                                    <label><input type="checkbox" name="stats" value="q3"> 第三四分位数</label>
                                </div>
                            </div>
                            
                            <div class="form-actions">
                                <button type="submit" class="clinical-button">生成统计结果</button>
                                <button type="button" class="clinical-button secondary">重置</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            
            <!-- 假设检验工具面板 -->
            <div class="tool-panel" id="hypothesis-panel">
                <div class="clinical-info-box">
                    <div class="info-box-title">
                        <i class="bi bi-123"></i> 假设检验
                    </div>
                    <div class="info-box-content">
                        <div class="tool-description">
                            <p>假设检验工具可帮助您进行各种统计检验，包括t检验、卡方检验、方差分析等。</p>
                        </div>
                        
                        <form class="analysis-form" id="hypothesisForm">
                            <div class="form-group">
                                <label for="dataset-select-hypothesis">选择数据集</label>
                                <div class="dataset-select-options">
                                    <select class="form-control" id="dataset-select-hypothesis" required>
                                        <option value="">-- 请选择数据集 --</option>
                                        {% for dataset in available_datasets %}
                                        <option value="{{ dataset.id }}">{{ dataset.name }}</option>
                                        {% endfor %}
                                    </select>
                        </div>
                    </div>
                            
                            <div class="form-group">
                                <label>检验类型</label>
                                <select class="form-select" name="test_type" id="test-type">
                                    <option value="ttest">t检验 (两组均值比较)</option>
                                    <option value="paired_ttest">配对t检验</option>
                                    <option value="anova">方差分析 (ANOVA, 多组均值比较)</option>
                                    <option value="chi2">卡方检验 (分类变量关联)</option>
                                    <option value="fisher">Fisher精确检验 (小样本分类变量)</option>
                                    <option value="wilcoxon">Wilcoxon秩和检验 (非参数检验)</option>
                                    <option value="kruskal">Kruskal-Wallis检验 (非参数多组比较)</option>
                                </select>
                            </div>
                            
                            <div class="form-group">
                                <label>选择变量</label>
                                <div class="variables-container">
                                    <div class="variable-category">连续变量</div>
                                    <div class="variable-selector">
                                        <label><input type="checkbox" name="hypothesis_variables" value="age"> 年龄</label>
                                        <label><input type="checkbox" name="hypothesis_variables" value="bmi"> BMI</label>
                                        <label><input type="checkbox" name="hypothesis_variables" value="glucose"> 血糖</label>
                                        <label><input type="checkbox" name="hypothesis_variables" value="bp"> 血压</label>
                                    </div>
                                    
                                    <div class="variable-category">分类变量</div>
                                    <div class="variable-selector">
                                        <label><input type="checkbox" name="hypothesis_variables" value="gender"> 性别</label>
                                        <label><input type="checkbox" name="hypothesis_variables" value="smoking"> 吸烟史</label>
                                        <label><input type="checkbox" name="hypothesis_variables" value="diabetes"> 糖尿病</label>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-group" id="group-variable-container">
                                <label>分组变量</label>
                                <select class="form-select" name="group_variable" id="group-variable">
                                    <option value="">-- 请选择分组变量 --</option>
                                    <option value="gender">性别</option>
                                    <option value="smoking">吸烟史</option>
                                    <option value="diabetes">糖尿病</option>
                                </select>
                            </div>
                            
                            <div class="form-group">
                                <label>显著性水平 (α)</label>
                                <select class="form-select" name="alpha">
                                    <option value="0.05" selected>0.05 (5%)</option>
                                    <option value="0.01">0.01 (1%)</option>
                                    <option value="0.1">0.1 (10%)</option>
                                </select>
                            </div>
                            
                            <div class="form-group">
                                <label>假设类型</label>
                                <div class="option-selectors">
                                    <label><input type="radio" name="hypothesis" value="two-sided" checked> 双侧检验</label>
                                    <label><input type="radio" name="hypothesis" value="greater"> 单侧检验 (大于)</label>
                                    <label><input type="radio" name="hypothesis" value="less"> 单侧检验 (小于)</label>
                                </div>
                            </div>
                            
                            <div class="form-actions">
                                <button type="submit" class="clinical-button">执行检验</button>
                                <button type="button" class="clinical-button secondary" id="resetHypothesisBtn">重置</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            
            <!-- 相关性分析工具面板 -->
            <div class="tool-panel" id="correlation-panel">
                <div class="clinical-info-box">
                    <div class="info-box-title">
                        <i class="bi bi-arrow-down-up"></i> 相关性分析
                    </div>
                    <div class="info-box-content">
                        <div class="tool-description">
                            <p>相关性分析工具可帮助您分析变量之间的相关关系，包括Pearson相关系数、Spearman相关系数等。</p>
                        </div>
                        
                        <form class="analysis-form" id="correlationForm">
                            <div class="form-group">
                                <label for="dataset-select-correlation">选择数据集</label>
                                <div class="dataset-select-options">
                                    <select class="form-control" id="dataset-select-correlation" required>
                                        <option value="">-- 请选择数据集 --</option>
                                        {% for dataset in available_datasets %}
                                        <option value="{{ dataset.id }}">{{ dataset.name }}</option>
                                        {% endfor %}
                                    </select>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label>相关系数类型</label>
                                <select class="form-select" name="correlation_type">
                                    <option value="pearson" selected>Pearson相关系数 (线性关系)</option>
                                    <option value="spearman">Spearman相关系数 (等级相关)</option>
                                    <option value="kendall">Kendall's Tau (非参数相关)</option>
                                    <option value="point_biserial">点二列相关 (连续变量与二分变量)</option>
                                </select>
                            </div>
                            
                            <div class="form-group">
                                <label>选择变量</label>
                                <div class="variables-container">
                                    <div class="variable-category">连续变量</div>
                                    <div class="variable-selector">
                                        <label><input type="checkbox" name="correlation_variables" value="age"> 年龄</label>
                                        <label><input type="checkbox" name="correlation_variables" value="bmi"> BMI</label>
                                        <label><input type="checkbox" name="correlation_variables" value="glucose"> 血糖</label>
                                        <label><input type="checkbox" name="correlation_variables" value="bp"> 血压</label>
                                    </div>
                                    
                                    <div class="variable-category">分类变量 (用于点二列相关)</div>
                                    <div class="variable-selector">
                                        <label><input type="checkbox" name="correlation_variables" value="gender"> 性别</label>
                                        <label><input type="checkbox" name="correlation_variables" value="smoking"> 吸烟史</label>
                                        <label><input type="checkbox" name="correlation_variables" value="diabetes"> 糖尿病</label>
                                    </div>
                                </div>
                                <small class="form-text text-muted">请至少选择两个变量进行分析</small>
                            </div>
                            
                            <div class="form-group">
                                <label>显著性检验</label>
                                <div class="option-selectors">
                                    <label><input type="checkbox" name="significance_test" value="true" checked> 进行显著性检验</label>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label>可视化选项</label>
                                <div class="option-selectors">
                                    <label><input type="checkbox" name="visualize" value="heatmap" checked> 热力图</label>
                                    <label><input type="checkbox" name="visualize" value="scatter" checked> 散点图矩阵</label>
                                    <label><input type="checkbox" name="visualize" value="network"> 网络图</label>
                                </div>
                            </div>
                            
                            <div class="form-actions">
                                <button type="submit" class="clinical-button">计算相关性</button>
                                <button type="button" class="clinical-button secondary" id="resetCorrelationBtn">重置</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            
            <!-- 回归分析工具面板 -->
            <div class="tool-panel" id="regression-panel">
                <div class="clinical-info-box">
                    <div class="info-box-title">
                        <i class="bi bi-graph-up-arrow"></i> 回归分析
                    </div>
                    <div class="info-box-content">
                        <div class="tool-description">
                            <p>回归分析工具可帮助您建立各种回归模型，包括线性回归、逻辑回归等。</p>
                        </div>
                        
                        <form class="analysis-form" id="regressionForm">
                            <div class="form-group">
                                <label for="dataset-select-regression">选择数据集</label>
                                <div class="dataset-select-options">
                                    <select class="form-control" id="dataset-select-regression" required>
                                        <option value="">-- 请选择数据集 --</option>
                                        {% for dataset in available_datasets %}
                                        <option value="{{ dataset.id }}">{{ dataset.name }}</option>
                                        {% endfor %}
                                    </select>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label>回归类型</label>
                                <select class="form-select" name="regression_type">
                                    <option value="linear" selected>线性回归</option>
                                    <option value="logistic">逻辑回归</option>
                                    <option value="polynomial">多项式回归</option>
                                    <option value="ridge">岭回归</option>
                                    <option value="lasso">LASSO回归</option>
                                </select>
                            </div>
                            
                            <div class="form-group">
                                <label>因变量</label>
                                <select class="form-select" name="dependent_variable">
                                    <option value="">-- 请选择因变量 --</option>
                                    <option value="bp">血压</option>
                                    <option value="glucose">血糖</option>
                                    <option value="diabetes">糖尿病</option>
                                </select>
                            </div>
                            
                            <div class="form-group">
                                <label>自变量</label>
                                <div class="variables-container">
                                    <div class="variable-selector">
                                        <label><input type="checkbox" name="independent_variables" value="age"> 年龄</label>
                                        <label><input type="checkbox" name="independent_variables" value="bmi"> BMI</label>
                                        <label><input type="checkbox" name="independent_variables" value="gender"> 性别</label>
                                        <label><input type="checkbox" name="independent_variables" value="smoking"> 吸烟史</label>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- 新增：交互项设置 -->
                            <div class="form-group">
                                <label>交互项设置</label>
                                <div class="interaction-settings">
                                    <div class="form-check mb-2">
                                        <input class="form-check-input" type="checkbox" id="enable-interactions">
                                        <label class="form-check-label" for="enable-interactions">启用变量交互项</label>
                                    </div>
                                    <div id="interaction-selector" style="display: none;">
                                        <div class="variables-container">
                                            <p class="text-muted">选择要创建交互项的变量对：</p>
                                            <div class="interaction-pairs">
                                                <!-- 交互项对将通过JavaScript动态生成 -->
                                            </div>
                                            <button type="button" class="clinical-button secondary mt-2" id="add-interaction">
                                                <i class="bi bi-plus-circle"></i> 添加交互项
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- 新增：数据预处理选项 -->
                            <div class="form-group">
                                <label>数据预处理</label>
                                <div class="preprocessing-options">
                                    <div class="option-selectors">
                                        <label><input type="checkbox" name="preprocessing" value="standardize"> 标准化连续变量</label>
                                        <label><input type="checkbox" name="preprocessing" value="center"> 中心化连续变量</label>
                                        <label><input type="checkbox" name="preprocessing" value="remove_outliers"> 移除异常值</label>
                                        <label><input type="checkbox" name="preprocessing" value="impute_missing"> 填补缺失值</label>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- 新增：模型验证设置 -->
                            <div class="form-group">
                                <label>模型验证</label>
                                <div class="validation-settings">
                                    <select class="form-select mb-2" name="validation_method">
                                        <option value="train_test_split" selected>训练集/测试集划分</option>
                                        <option value="cross_validation">交叉验证</option>
                                        <option value="bootstrap">Bootstrap</option>
                                    </select>
                                    
                                    <div id="train-test-options">
                                        <label>测试集比例</label>
                                        <input type="range" class="form-range" min="10" max="50" step="5" value="20" id="test-size">
                                        <div class="d-flex justify-content-between">
                                            <span>10%</span>
                                            <span id="test-size-value">20%</span>
                                            <span>50%</span>
                                        </div>
                                    </div>
                                    
                                    <div id="cv-options" style="display: none;">
                                        <label>交叉验证折数</label>
                                        <select class="form-select" name="cv_folds">
                                            <option value="5" selected>5折</option>
                                            <option value="10">10折</option>
                                            <option value="3">3折</option>
                                        </select>
                                    </div>
                                    
                                    <div id="bootstrap-options" style="display: none;">
                                        <label>Bootstrap样本数</label>
                                        <input type="number" class="form-control" name="bootstrap_samples" value="100" min="10" max="1000">
                                    </div>
                                </div>
                            </div>
                            
                            <!-- 新增：模型诊断选项 -->
                            <div class="form-group">
                                <label>模型诊断</label>
                                <div class="diagnostics-options">
                                    <div class="option-selectors">
                                        <label><input type="checkbox" name="diagnostics" value="residual_plot" checked> 残差图</label>
                                        <label><input type="checkbox" name="diagnostics" value="qq_plot" checked> QQ图</label>
                                        <label><input type="checkbox" name="diagnostics" value="leverage_plot"> 杠杆值图</label>
                                        <label><input type="checkbox" name="diagnostics" value="vif"> 方差膨胀因子(VIF)</label>
                                        <label><input type="checkbox" name="diagnostics" value="partial_plots"> 偏回归图</label>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-actions">
                                <button type="submit" class="clinical-button">建立模型</button>
                                <button type="button" class="clinical-button secondary" id="resetRegressionBtn">重置</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            
            <!-- 生存分析工具面板 -->
            <div class="tool-panel" id="survival-panel">
                <div class="clinical-info-box">
                    <div class="info-box-title">
                        <i class="bi bi-activity"></i> 生存分析
                    </div>
                    <div class="info-box-content">
                        <div class="tool-description">
                            <p>生存分析工具可帮助您分析时间-事件数据，进行Kaplan-Meier分析、Cox比例风险回归等。</p>
                        </div>
                        
                        <form class="analysis-form" id="survivalForm">
                            <div class="form-group">
                                <label for="dataset-select-survival">选择数据集</label>
                                <div class="dataset-select-options">
                                    <select class="form-control" id="dataset-select-survival" required>
                                        <option value="">-- 请选择数据集 --</option>
                                        {% for dataset in available_datasets %}
                                        <option value="{{ dataset.id }}">{{ dataset.name }}</option>
                                        {% endfor %}
                                    </select>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label>分析方法</label>
                                <select class="form-select" name="survival_method">
                                    <option value="kaplan_meier" selected>Kaplan-Meier生存曲线</option>
                                    <option value="cox_regression">Cox比例风险回归</option>
                                    <option value="log_rank">Log-rank检验 (组间比较)</option>
                                </select>
                            </div>
                            
                            <div class="form-group">
                                <label>时间变量</label>
                                <select class="form-select" name="time_variable">
                                    <option value="">-- 请选择时间变量 --</option>
                                    <option value="follow_up_time">随访时间</option>
                                    <option value="survival_months">生存月数</option>
                                </select>
                            </div>
                            
                            <div class="form-group">
                                <label>事件变量</label>
                                <select class="form-select" name="event_variable">
                                    <option value="">-- 请选择事件变量 --</option>
                                    <option value="death">死亡</option>
                                    <option value="relapse">复发</option>
                                </select>
                            </div>
                            
                            <div class="form-group">
                                <label>分组变量</label>
                                <select class="form-select" name="group_variable">
                                    <option value="">-- 请选择分组变量 --</option>
                                    <option value="gender">性别</option>
                                    <option value="smoking">吸烟史</option>
                                    <option value="diabetes">糖尿病</option>
                                </select>
                            </div>
                            
                            <!-- 新增：协变量调整 -->
                            <div class="form-group">
                                <label>协变量调整</label>
                                <div class="form-check mb-2">
                                    <input class="form-check-input" type="checkbox" id="enable-covariates">
                                    <label class="form-check-label" for="enable-covariates">启用协变量调整</label>
                                </div>
                                <div id="covariates-selector" style="display: none;">
                                    <div class="variables-container">
                                        <div class="variable-selector">
                                            <label><input type="checkbox" name="covariates" value="age"> 年龄</label>
                                            <label><input type="checkbox" name="covariates" value="bmi"> BMI</label>
                                            <label><input type="checkbox" name="covariates" value="gender"> 性别</label>
                                            <label><input type="checkbox" name="covariates" value="smoking"> 吸烟史</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- 新增：竞争风险分析 -->
                            <div class="form-group">
                                <label>竞争风险分析</label>
                                <div class="form-check mb-2">
                                    <input class="form-check-input" type="checkbox" id="enable-competing-risks">
                                    <label class="form-check-label" for="enable-competing-risks">启用竞争风险分析</label>
                                </div>
                                <div id="competing-risks-options" style="display: none;">
                                    <label>竞争风险事件</label>
                                    <select class="form-select" name="competing_risk_event">
                                        <option value="">-- 请选择竞争风险事件 --</option>
                                        <option value="other_death">其他原因死亡</option>
                                        <option value="treatment_change">治疗方案变更</option>
                                        <option value="lost_followup">失访</option>
                                    </select>
                                    <div class="form-check mt-2">
                                        <input class="form-check-input" type="checkbox" id="fine-gray-model" name="fine_gray_model">
                                        <label class="form-check-label" for="fine-gray-model">使用Fine-Gray模型</label>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- 新增：生存曲线设置 -->
                            <div class="form-group">
                                <label>生存曲线设置</label>
                                <div class="option-selectors">
                                    <label><input type="checkbox" name="curve_options" value="ci" checked> 显示95%置信区间</label>
                                    <label><input type="checkbox" name="curve_options" value="risk_table" checked> 显示风险表</label>
                                    <label><input type="checkbox" name="curve_options" value="censored" checked> 标记删失点</label>
                                </div>
                            </div>
                            
                            <!-- 新增：分层分析 -->
                            <div class="form-group">
                                <label>分层分析</label>
                                <div class="form-check mb-2">
                                    <input class="form-check-input" type="checkbox" id="enable-stratification">
                                    <label class="form-check-label" for="enable-stratification">启用分层分析</label>
                                </div>
                                <div id="stratification-options" style="display: none;">
                                    <label>分层变量</label>
                                    <select class="form-select" name="stratification_variable">
                                        <option value="">-- 请选择分层变量 --</option>
                                        <option value="age_group">年龄组</option>
                                        <option value="gender">性别</option>
                                        <option value="stage">疾病分期</option>
                                    </select>
                                    <div class="form-check mt-2">
                                        <input class="form-check-input" type="checkbox" id="interaction-test" name="interaction_test">
                                        <label class="form-check-label" for="interaction-test">进行交互作用检验</label>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-actions">
                                <button type="submit" class="clinical-button">进行分析</button>
                                <button type="button" class="clinical-button secondary" id="resetSurvivalBtn">重置</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            
            <!-- 风险评估工具面板 -->
            <div class="tool-panel" id="risk-panel">
                <div class="clinical-info-box">
                    <div class="info-box-title">
                        <i class="bi bi-shield-check"></i> 风险评估
                    </div>
                    <div class="info-box-content">
                        <div class="tool-description">
                            <p>风险评估工具可帮助您构建和验证风险预测模型，评估患者风险等级。</p>
                        </div>
                        
                        <form class="analysis-form" id="riskForm">
                            <div class="form-group">
                                <label for="dataset-select-risk">选择数据集</label>
                                <div class="dataset-select-options">
                                    <select class="form-control" id="dataset-select-risk" required>
                                        <option value="">-- 请选择数据集 --</option>
                                        {% for dataset in available_datasets %}
                                        <option value="{{ dataset.id }}">{{ dataset.name }}</option>
                                        {% endfor %}
                                    </select>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label>风险模型类型</label>
                                <select class="form-select" name="model_type">
                                    <option value="logistic" selected>Logistic回归</option>
                                    <option value="decision_tree">决策树</option>
                                    <option value="random_forest">随机森林</option>
                                    <option value="xgboost">XGBoost</option>
                                </select>
                            </div>
                            
                            <div class="form-group">
                                <label>目标变量</label>
                                <select class="form-select" name="target_variable">
                                    <option value="">-- 请选择目标变量 --</option>
                                    <option value="complication">并发症</option>
                                    <option value="readmission">再入院</option>
                                    <option value="mortality">死亡率</option>
                                </select>
                            </div>
                            
                            <!-- 新增：预测因子选择 -->
                            <div class="form-group">
                                <label>预测因子选择</label>
                                <div class="variables-container">
                                    <div class="variable-selector">
                                        <label><input type="checkbox" name="predictors" value="age" checked> 年龄</label>
                                        <label><input type="checkbox" name="predictors" value="gender" checked> 性别</label>
                                        <label><input type="checkbox" name="predictors" value="bmi" checked> BMI</label>
                                        <label><input type="checkbox" name="predictors" value="smoking" checked> 吸烟史</label>
                                        <label><input type="checkbox" name="predictors" value="diabetes"> 糖尿病</label>
                                        <label><input type="checkbox" name="predictors" value="hypertension"> 高血压</label>
                                        <label><input type="checkbox" name="predictors" value="previous_surgery"> 既往手术史</label>
                                        <label><input type="checkbox" name="predictors" value="medication"> 用药情况</label>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- 新增：特征选择方法 -->
                            <div class="form-group">
                                <label>特征选择方法</label>
                                <div class="form-check mb-2">
                                    <input class="form-check-input" type="checkbox" id="enable-feature-selection">
                                    <label class="form-check-label" for="enable-feature-selection">启用自动特征选择</label>
                                </div>
                                <div id="feature-selection-options" style="display: none;">
                                    <select class="form-select" name="feature_selection_method">
                                        <option value="rfe" selected>递归特征消除 (RFE)</option>
                                        <option value="lasso">LASSO特征选择</option>
                                        <option value="univariate">单变量统计检验</option>
                                        <option value="tree_importance">树模型特征重要性</option>
                                    </select>
                                    <div class="mt-2">
                                        <label>选择特征数量</label>
                                        <input type="range" class="form-range" min="1" max="10" step="1" value="5" id="feature-count">
                                        <div class="d-flex justify-content-between">
                                            <span>1</span>
                                            <span id="feature-count-value">5</span>
                                            <span>10</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- 新增：模型参数调优 -->
                            <div class="form-group">
                                <label>模型参数调优</label>
                                <div class="form-check mb-2">
                                    <input class="form-check-input" type="checkbox" id="enable-hyperparameter-tuning" checked>
                                    <label class="form-check-label" for="enable-hyperparameter-tuning">启用超参数调优</label>
                                </div>
                                <div id="hyperparameter-options">
                                    <select class="form-select" name="tuning_method">
                                        <option value="grid_search" selected>网格搜索</option>
                                        <option value="random_search">随机搜索</option>
                                        <option value="bayesian">贝叶斯优化</option>
                                    </select>
                                    <div class="mt-2">
                                        <label>交叉验证折数</label>
                                        <select class="form-select" name="tuning_cv_folds">
                                            <option value="5" selected>5折</option>
                                            <option value="10">10折</option>
                                            <option value="3">3折</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- 新增：验证与测试集设置 -->
                            <div class="form-group">
                                <label>验证与测试集设置</label>
                                <div class="validation-settings">
                                    <div class="mb-2">
                                        <label>数据集划分方式</label>
                                        <select class="form-select" name="split_method">
                                            <option value="train_val_test" selected>训练/验证/测试集</option>
                                            <option value="train_test">训练/测试集</option>
                                            <option value="cv_only">仅交叉验证</option>
                                        </select>
                                    </div>
                                    <div id="split-ratios">
                                        <div class="row">
                                            <div class="col">
                                                <label>训练集比例</label>
                                                <input type="number" class="form-control" name="train_ratio" value="70" min="50" max="90">
                                            </div>
                                            <div class="col">
                                                <label>验证集比例</label>
                                                <input type="number" class="form-control" name="val_ratio" value="15" min="5" max="25">
                                            </div>
                                            <div class="col">
                                                <label>测试集比例</label>
                                                <input type="number" class="form-control" name="test_ratio" value="15" min="5" max="25">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- 新增：风险分层设置 -->
                            <div class="form-group">
                                <label>风险分层设置</label>
                                <div class="risk-stratification-settings">
                                    <div class="mb-2">
                                        <label>风险等级数量</label>
                                        <select class="form-select" name="risk_levels">
                                            <option value="3" selected>3级 (低/中/高)</option>
                                            <option value="4">4级 (低/中低/中高/高)</option>
                                            <option value="2">2级 (低/高)</option>
                                        </select>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="custom-thresholds" name="custom_thresholds">
                                        <label class="form-check-label" for="custom-thresholds">自定义风险阈值</label>
                                    </div>
                                    <div id="threshold-inputs" style="display: none;">
                                        <div class="mt-2" id="threshold-sliders">
                                            <!-- 阈值滑块将通过JavaScript动态生成 -->
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-actions">
                                <button type="submit" class="clinical-button">构建模型</button>
                                <button type="button" class="clinical-button secondary" id="resetRiskBtn">重置</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            
            <!-- 结局预测工具面板 -->
            <div class="tool-panel" id="outcome-panel">
                <div class="clinical-info-box">
                    <div class="info-box-title">
                        <i class="bi bi-clipboard-check"></i> 结局预测
                    </div>
                    <div class="info-box-content">
                        <div class="tool-description">
                            <p>结局预测工具可帮助您预测患者的临床结局，如治愈率、复发率等。</p>
                        </div>
                        
                        <form class="analysis-form" id="outcomeForm">
                            <div class="form-group">
                                <label for="dataset-select-outcome">选择数据集</label>
                                <div class="dataset-select-options">
                                    <select class="form-control" id="dataset-select-outcome" required>
                                        <option value="">-- 请选择数据集 --</option>
                                        {% for dataset in available_datasets %}
                                        <option value="{{ dataset.id }}">{{ dataset.name }}</option>
                                        {% endfor %}
                                    </select>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label>预测结局</label>
                                <select class="form-select" name="outcome_type">
                                    <option value="cure_rate">治愈率</option>
                                    <option value="recurrence">复发率</option>
                                    <option value="readmission">再入院率</option>
                                    <option value="mortality">死亡率</option>
                                </select>
                            </div>
                            
                            <!-- 新增：预测模型选择 -->
                            <div class="form-group">
                                <label>预测模型选择</label>
                                <div class="model-selection">
                                    <select class="form-select" name="prediction_model">
                                        <option value="logistic_regression" selected>逻辑回归</option>
                                        <option value="random_forest">随机森林</option>
                                        <option value="xgboost">XGBoost</option>
                                        <option value="neural_network">神经网络</option>
                                        <option value="ensemble">集成模型</option>
                                    </select>
                                </div>
                            </div>
                            
                            <!-- 新增：预测因子选择 -->
                            <div class="form-group">
                                <label>预测因子选择</label>
                                <div class="variables-container">
                                    <div class="variable-category">人口统计学特征</div>
                                    <div class="variable-selector">
                                        <label><input type="checkbox" name="outcome_predictors" value="age" checked> 年龄</label>
                                        <label><input type="checkbox" name="outcome_predictors" value="gender" checked> 性别</label>
                                        <label><input type="checkbox" name="outcome_predictors" value="bmi" checked> BMI</label>
                                        <label><input type="checkbox" name="outcome_predictors" value="race"> 种族</label>
                                    </div>
                                    
                                    <div class="variable-category">临床特征</div>
                                    <div class="variable-selector">
                                        <label><input type="checkbox" name="outcome_predictors" value="smoking" checked> 吸烟史</label>
                                        <label><input type="checkbox" name="outcome_predictors" value="diabetes" checked> 糖尿病</label>
                                        <label><input type="checkbox" name="outcome_predictors" value="hypertension" checked> 高血压</label>
                                        <label><input type="checkbox" name="outcome_predictors" value="previous_surgery"> 既往手术史</label>
                                    </div>
                                    
                                    <div class="variable-category">实验室指标</div>
                                    <div class="variable-selector">
                                        <label><input type="checkbox" name="outcome_predictors" value="wbc"> 白细胞计数</label>
                                        <label><input type="checkbox" name="outcome_predictors" value="hgb"> 血红蛋白</label>
                                        <label><input type="checkbox" name="outcome_predictors" value="plt"> 血小板计数</label>
                                        <label><input type="checkbox" name="outcome_predictors" value="creatinine"> 肌酐</label>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- 新增：预测时间点 -->
                            <div class="form-group">
                                <label>预测时间点</label>
                                <div class="time-point-selection">
                                    <div class="mb-2">
                                        <select class="form-select" name="time_point_type">
                                            <option value="fixed" selected>固定时间点</option>
                                            <option value="dynamic">动态时间点</option>
                                        </select>
                                    </div>
                                    
                                    <div id="fixed-time-points">
                                        <div class="option-selectors">
                                            <label><input type="checkbox" name="time_points" value="30" checked> 30天</label>
                                            <label><input type="checkbox" name="time_points" value="90"> 90天</label>
                                            <label><input type="checkbox" name="time_points" value="180"> 180天</label>
                                            <label><input type="checkbox" name="time_points" value="365"> 1年</label>
                                        </div>
                                    </div>
                                    
                                    <div id="dynamic-time-points" style="display: none;">
                                        <div class="mb-2">
                                            <label>起始时间点（天）</label>
                                            <input type="number" class="form-control" name="start_time" value="30" min="1">
                                        </div>
                                        <div class="mb-2">
                                            <label>终止时间点（天）</label>
                                            <input type="number" class="form-control" name="end_time" value="365" min="1">
                                        </div>
                                        <div class="mb-2">
                                            <label>时间间隔（天）</label>
                                            <input type="number" class="form-control" name="time_interval" value="30" min="1">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- 新增：模型验证设置 -->
                            <div class="form-group">
                                <label>模型验证设置</label>
                                <div class="validation-settings">
                                    <div class="mb-2">
                                        <label>验证方法</label>
                                        <select class="form-select" name="validation_method">
                                            <option value="cv" selected>交叉验证</option>
                                            <option value="bootstrap">Bootstrap</option>
                                            <option value="holdout">留出法</option>
                                        </select>
                                    </div>
                                    <div class="mb-2">
                                        <label>验证指标</label>
                                        <div class="option-selectors">
                                            <label><input type="checkbox" name="metrics" value="auc" checked> AUC</label>
                                            <label><input type="checkbox" name="metrics" value="accuracy" checked> 准确率</label>
                                            <label><input type="checkbox" name="metrics" value="sensitivity" checked> 敏感性</label>
                                            <label><input type="checkbox" name="metrics" value="specificity" checked> 特异性</label>
                                            <label><input type="checkbox" name="metrics" value="ppv"> 阳性预测值</label>
                                            <label><input type="checkbox" name="metrics" value="npv"> 阴性预测值</label>
                                            <label><input type="checkbox" name="metrics" value="f1"> F1分数</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- 新增：结果展示选项 -->
                            <div class="form-group">
                                <label>结果展示选项</label>
                                <div class="result-display-options">
                                    <div class="option-selectors">
                                        <label><input type="checkbox" name="display_options" value="roc" checked> ROC曲线</label>
                                        <label><input type="checkbox" name="display_options" value="calibration" checked> 校准曲线</label>
                                        <label><input type="checkbox" name="display_options" value="importance" checked> 特征重要性</label>
                                        <label><input type="checkbox" name="display_options" value="confusion_matrix"> 混淆矩阵</label>
                                        <label><input type="checkbox" name="display_options" value="decision_curve"> 决策曲线分析</label>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="form-actions">
                                <button type="submit" class="clinical-button">进行预测</button>
                                <button type="button" class="clinical-button secondary" id="resetOutcomeBtn">重置</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            
            <!-- 图表生成工具面板 -->
            <div class="tool-panel" id="charts-panel">
                <div class="clinical-info-box">
                    <div class="info-box-title">
                        <i class="bi bi-bar-chart"></i> 图表生成
                    </div>
                    <div class="info-box-content">
                        <div class="tool-description">
                            <p>图表生成工具可帮助您创建各种可视化图表，包括柱状图、折线图、散点图等。</p>
                        </div>
                        
                        <form class="analysis-form" id="chartsForm">
                            <div class="form-group">
                                <label for="dataset-select-charts">选择数据集</label>
                                <div class="dataset-select-options">
                                    <select class="form-control" id="dataset-select-charts" required>
                                        <option value="">-- 请选择数据集 --</option>
                                        {% for dataset in available_datasets %}
                                        <option value="{{ dataset.id }}">{{ dataset.name }}</option>
                                        {% endfor %}
                                    </select>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label>图表类型</label>
                                <select class="form-select" name="chart_type">
                                    <option value="bar" selected>柱状图</option>
                                    <option value="line">折线图</option>
                                    <option value="scatter">散点图</option>
                                    <option value="pie">饼图</option>
                                    <option value="box">箱线图</option>
                                    <option value="heatmap">热力图</option>
                                </select>
                            </div>
                            
                            <!-- 新增：变量选择与映射 -->
                            <div class="form-group">
                                <label>变量选择与映射</label>
                                <div class="variables-container">
                                    <div id="chart-variable-mapping">
                                        <div class="mb-2">
                                            <label>X轴变量</label>
                                            <select class="form-select" name="x_variable">
                                                <option value="">-- 请选择变量 --</option>
                                                <option value="gender">性别</option>
                                                <option value="age_group">年龄组</option>
                                                <option value="smoking">吸烟史</option>
                                                <option value="diabetes">糖尿病</option>
                                            </select>
                                        </div>
                                        <div class="mb-2">
                                            <label>Y轴变量</label>
                                            <select class="form-select" name="y_variable">
                                                <option value="">-- 请选择变量 --</option>
                                                <option value="bp">血压</option>
                                                <option value="glucose">血糖</option>
                                                <option value="bmi">BMI</option>
                                                <option value="cholesterol">胆固醇</option>
                                            </select>
                                        </div>
                                        <div class="mb-2">
                                            <label>分组变量（可选）</label>
                                            <select class="form-select" name="group_variable">
                                                <option value="">-- 无分组 --</option>
                                                <option value="gender">性别</option>
                                                <option value="smoking">吸烟史</option>
                                                <option value="diabetes">糖尿病</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- 新增：图表选项 -->
                            <div class="form-group">
                                <label>图表选项</label>
                                <div class="option-selectors">
                                    <label><input type="checkbox" name="chart_options" value="title" checked> 显示标题</label>
                                    <label><input type="checkbox" name="chart_options" value="legend" checked> 显示图例</label>
                                    <label><input type="checkbox" name="chart_options" value="grid" checked> 显示网格</label>
                                    <label><input type="checkbox" name="chart_options" value="animation" checked> 启用动画</label>
                                </div>
                            </div>
                            
                            <div class="form-actions">
                                <button type="submit" class="clinical-button">生成图表</button>
                                <button type="button" class="clinical-button secondary" id="resetChartsBtn">重置</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            
            <!-- 自动报告工具面板 -->
            <div class="tool-panel" id="reports-panel">
                <div class="clinical-info-box">
                    <div class="info-box-title">
                        <i class="bi bi-file-earmark-text"></i> 自动报告
                    </div>
                    <div class="info-box-content">
                        <div class="tool-description">
                            <p>自动报告工具可帮助您生成各种类型的报告，包括文本报告、表格报告等。</p>
                        </div>
                        
                        <form class="analysis-form" id="reportsForm">
                            <div class="form-group">
                                <label for="dataset-select-reports">选择数据集</label>
                                <div class="dataset-select-options">
                                    <select class="form-control" id="dataset-select-reports" required>
                                        <option value="">-- 请选择数据集 --</option>
                                        {% for dataset in available_datasets %}
                                        <option value="{{ dataset.id }}">{{ dataset.name }}</option>
                                        {% endfor %}
                                    </select>
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label>报告类型</label>
                                <select class="form-select" name="report_type">
                                    <option value="text_report" selected>文本报告</option>
                                    <option value="table_report">表格报告</option>
                                </select>
                            </div>
                            
                            <div class="form-group">
                                <label>报告内容</label>
                                <textarea class="form-control" name="report_content" rows="5" placeholder="输入报告内容"></textarea>
                            </div>
                            
                            <div class="form-actions">
                                <button type="submit" class="clinical-button">生成报告</button>
                                <button type="button" class="clinical-button secondary" id="resetReportsBtn">重置</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
<!-- 添加两个备用的Chart.js CDN链接，增加加载成功率 -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
// 检查Chart.js是否成功加载，如果没有，尝试从备用CDN加载
if (typeof Chart === 'undefined') {
    console.log('主Chart.js CDN加载失败，尝试备用链接...');
    var script = document.createElement('script');
    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js';
    script.integrity = 'sha512-ElRFoEQdI5Ht6kZvyzXhYG9NqjtkmlkfYk0wr6wHxU9JEHakS7UJZNeml5ALk+8IKlU6jDgMabC3vkumRokgJA==';
    script.crossOrigin = 'anonymous';
    script.referrerPolicy = 'no-referrer';
    document.head.appendChild(script);
    
    // 再次检查并最后尝试使用另一个备用CDN
    script.onerror = function() {
        console.log('备用Chart.js CDN也加载失败，尝试最终备用链接...');
        var script2 = document.createElement('script');
        script2.src = 'https://unpkg.com/chart.js@3.9.1/dist/chart.min.js';
        document.head.appendChild(script2);
    };
}
</script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
    // 工具切换
        const toolItems = document.querySelectorAll('.tool-item');
    const toolPanels = document.querySelectorAll('.tool-panel');
        
        toolItems.forEach(item => {
            item.addEventListener('click', function() {
            const toolId = this.getAttribute('data-tool');
                
            // 更新活动工具项
            toolItems.forEach(i => i.classList.remove('active'));
                this.classList.add('active');
                
                // 显示对应的工具面板
            toolPanels.forEach(panel => {
                panel.classList.remove('active');
                if (panel.id === `${toolId}-panel`) {
                    panel.classList.add('active');
                }
            });
        });
    });
    
    // 导出模态框
    window.openExportModal = function() {
        const exportModal = new bootstrap.Modal(document.getElementById('exportModal'));
        exportModal.show();
    };
    
    // 全选数据集
    const selectAllDatasets = document.getElementById('select-all-datasets');
                const datasetSelect = document.getElementById('dataset-select');
    const datasetSelectionStatus = document.getElementById('dataset-selection-status');
    
    if (selectAllDatasets && datasetSelect && datasetSelectionStatus) {
        selectAllDatasets.addEventListener('change', function() {
            datasetSelect.disabled = this.checked;
            datasetSelectionStatus.style.display = this.checked ? 'block' : 'none';
                
                if (this.checked) {
                const datasetCount = datasetSelect.options.length - 1; // 减去默认选项
                document.querySelector('.dataset-count').textContent = datasetCount;
                }
            });
        }
        
    // 表单提交处理
        const analysisForm = document.querySelector('.analysis-form');
        if (analysisForm) {
            analysisForm.addEventListener('submit', function(e) {
                e.preventDefault();
                
            // 验证表单
            const selectedDataset = selectAllDatasets.checked || datasetSelect.value;
            const selectedVariables = document.querySelectorAll('input[name="variables"]:checked');
            
            if (!selectedDataset) {
                alert('请选择数据集');
                        return;
                }
                
                if (selectedVariables.length === 0) {
                alert('请至少选择一个变量');
                    return;
                }
                
            // 模拟生成结果
            generateResults();
        });
    }
    
    // 描述性统计 - 数据集选择变化时加载变量
    if (datasetSelect) {
        datasetSelect.addEventListener('change', function() {
            const datasetId = this.value;
            if (datasetId) {
                loadDatasetVariables(datasetId, 'descriptive');
            }
        });
        
        // 页面加载时，如果已经选择了数据集，则加载变量
        if (datasetSelect.value) {
            loadDatasetVariables(datasetSelect.value, 'descriptive');
        }
    }
    
    // 假设检验 - 数据集选择变化时加载变量
    const hypothesisDatasetSelect = document.getElementById('dataset-select-hypothesis');
    if (hypothesisDatasetSelect) {
        hypothesisDatasetSelect.addEventListener('change', function() {
            const datasetId = this.value;
            if (datasetId) {
                loadDatasetVariables(datasetId, 'hypothesis');
            }
        });
        
        // 页面加载时，如果已经选择了数据集，则加载变量
        if (hypothesisDatasetSelect.value) {
            loadDatasetVariables(hypothesisDatasetSelect.value, 'hypothesis');
        }
    }
    
    // 相关性分析 - 数据集选择变化时加载变量
    const correlationDatasetSelect = document.getElementById('dataset-select-correlation');
    if (correlationDatasetSelect) {
        correlationDatasetSelect.addEventListener('change', function() {
            const datasetId = this.value;
            if (datasetId) {
                loadDatasetVariables(datasetId, 'correlation');
            }
        });
        
        // 页面加载时，如果已经选择了数据集，则加载变量
        if (correlationDatasetSelect.value) {
            loadDatasetVariables(correlationDatasetSelect.value, 'correlation');
        }
    }
    
    // 回归分析 - 数据集选择变化时加载变量
    const regressionDatasetSelect = document.getElementById('dataset-select-regression');
    if (regressionDatasetSelect) {
        regressionDatasetSelect.addEventListener('change', function() {
            const datasetId = this.value;
            if (datasetId) {
                loadDatasetVariables(datasetId, 'regression');
            }
        });
        
        // 页面加载时，如果已经选择了数据集，则加载变量
        if (regressionDatasetSelect.value) {
            loadDatasetVariables(regressionDatasetSelect.value, 'regression');
        }
    }
});

    // 模拟生成结果
    function generateResults() {
                const resultPreview = document.querySelector('.result-preview');
        const selectAllDatasets = document.getElementById('select-all-datasets');
        const datasetSelect = document.getElementById('dataset-select');
        const selectedDataset = selectAllDatasets && selectAllDatasets.checked ? 'all' : datasetSelect.value;
        const selectedVariables = [];
        
        // 收集选中的变量
        document.querySelectorAll('input[name="variables"]:checked').forEach(input => {
            selectedVariables.push(input.value);
        });
        
        // 收集选中的统计量
        const selectedStats = [];
        document.querySelectorAll('input[name="stats"]:checked').forEach(input => {
            selectedStats.push(input.value);
        });
        
        // 显示加载状态
                resultPreview.innerHTML = `
            <div class="loading-indicator">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">加载中...</span>
                                                    </div>
                <p>正在从数据库获取数据并生成统计结果，请稍候...</p>
                                                    </div>
                `;
                
        // 构建请求参数
        const requestData = {
            dataset_ids: selectedDataset === 'all' ? [] : [parseInt(selectedDataset)],
            variables: selectedVariables,
            stats: selectedStats
        };
        
        // 发送API请求获取实际数据
        fetch('/api/analysis/descriptive', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify(requestData)
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('获取数据失败: ' + response.status);
            }
            return response.json();
        })
        .then(data => {
            if (!data.success) {
                throw new Error(data.message || '分析失败');
            }
            
            // 生成结果表格HTML
            let tableHTML = `
                <div class="result-content">
                    <h4>描述性统计结果</h4>
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover">
                        <thead>
                            <tr>
                                    <th>变量</th>
            `;
            
            // 添加表头 - 统计量
            selectedStats.forEach(stat => {
                tableHTML += `<th>${getStatDisplayName(stat)}</th>`;
            });
            
            tableHTML += `
                            </tr>
                        </thead>
                        <tbody>
            `;
            
            // 填充表格数据
            if (data.results) {
                let chartLabels = [];
                let chartData = [];
                
                Object.keys(data.results).forEach(varName => {
                    const varResult = data.results[varName];
                    chartLabels.push(varName);
                    
                    tableHTML += `<tr><td>${varName}</td>`;
                    
                    selectedStats.forEach(stat => {
                        const value = varResult.stats && varResult.stats[stat] !== undefined 
                            ? formatStatValue(varResult.stats[stat]) 
                            : 'N/A';
                        tableHTML += `<td>${value}</td>`;
                        
                        // 收集均值数据用于图表
                        if (stat === 'mean') {
                            chartData.push(parseFloat(value) || 0);
                        }
                    });
                    
                    tableHTML += `</tr>`;
                });
                
                tableHTML += `
                            </tbody>
                        </table>
                                                        </div>
                    <div class="result-chart">
                        <canvas id="resultChart" width="400" height="200"></canvas>
                                                    </div>
                    <div class="mt-3 text-end">
                        <button class="clinical-button secondary" onclick="exportResults()">
                            <i class="bi bi-download"></i> 导出结果
                        </button>
                                                </div>
                                            </div>
                `;
                
                resultPreview.innerHTML = tableHTML;
                
                // 绘制实际数据的图表
                try {
                    if (typeof Chart !== 'undefined' && chartLabels.length > 0) {
                        const canvas = document.getElementById('resultChart');
                        if (canvas) {
                            const ctx = canvas.getContext('2d');
                            new Chart(ctx, {
                                type: 'bar',
                                data: {
                                    labels: chartLabels,
                                    datasets: [{
                                        label: '均值',
                                        data: chartData,
                                        backgroundColor: chartLabels.map((_, i) => {
                                            const colors = [
                                                'rgba(54, 162, 235, 0.5)',
                                                'rgba(75, 192, 192, 0.5)',
                                                'rgba(255, 159, 64, 0.5)',
                                                'rgba(153, 102, 255, 0.5)',
                                                'rgba(255, 99, 132, 0.5)'
                                            ];
                                            return colors[i % colors.length];
                                        }),
                                        borderColor: chartLabels.map((_, i) => {
                                            const colors = [
                                                'rgba(54, 162, 235, 1)',
                                                'rgba(75, 192, 192, 1)',
                                                'rgba(255, 159, 64, 1)',
                                                'rgba(153, 102, 255, 1)',
                                                'rgba(255, 99, 132, 1)'
                                            ];
                                            return colors[i % colors.length];
                                        }),
                                        borderWidth: 1
                                    }]
                                },
                                options: {
                                    responsive: true,
                                    maintainAspectRatio: false,
                                    plugins: {
                                        title: {
                                            display: true,
                                            text: '变量均值比较'
                                        },
                                        legend: {
                                        display: false
                                        }
                                    }
                                }
                            });
                        }
                    }
                } catch (error) {
                console.error('绘制图表失败:', error);
                }
            } else {
                resultPreview.innerHTML = `
                <div class="alert alert-info">
                    <i class="bi bi-info-circle"></i> 没有找到符合条件的数据
                                        </div>
                `;
            }
        })
        .catch(error => {
        console.error('分析请求失败:', error);
            resultPreview.innerHTML = `
            <div class="alert alert-danger">
                <i class="bi bi-exclamation-triangle"></i> 分析失败: ${error.message}
                                    </div>
            `;
        });
    }
    
    // 获取统计量的显示名称
    function getStatDisplayName(stat) {
        const statNames = {
            'mean': '均值',
            'median': '中位数',
            'sd': '标准差',
            'var': '方差',
            'min': '最小值',
            'max': '最大值',
            'q1': '第一四分位数',
            'q3': '第三四分位数',
            'skewness': '偏度',
            'kurtosis': '峰度'
        };
        return statNames[stat] || stat;
    }
    
    // 格式化统计值
    function formatStatValue(value) {
        if (value === null || value === undefined) {
            return 'N/A';
        }
        
        if (typeof value === 'number') {
            // 检查是否为整数
            if (Number.isInteger(value)) {
                return value.toString();
            }
            
            // 如果是小数，保留两位小数
            return value.toFixed(2);
        }
        
        return value;
    }
    
    // 导出结果
    function exportResults() {
        alert('导出功能开发中，即将支持Excel、CSV和PDF格式导出');
    }
    
// 加载数据集变量
function loadDatasetVariables(datasetId, toolType) {
    let variablesContainer;
    
    // 根据工具类型选择不同的变量容器
    switch(toolType) {
        case 'descriptive':
            variablesContainer = document.querySelector('#descriptive-panel .variables-container .variables-list');
                break;
        case 'hypothesis':
            variablesContainer = document.querySelector('#hypothesis-panel .variables-container');
                break;
        case 'correlation':
            variablesContainer = document.querySelector('#correlation-panel .variables-container');
                break;
        case 'regression':
            variablesContainer = document.querySelector('#regression-panel .variables-container');
            break;
            default:
            variablesContainer = document.querySelector('.variables-container');
    }
    
    if (!variablesContainer) {
        console.error('找不到变量容器:', toolType);
                return;
            }
            
    // 显示加载状态
    variablesContainer.innerHTML = `
        <div class="loading-indicator">
            <div class="spinner-border spinner-border-sm text-primary" role="status">
                <span class="visually-hidden">加载中...</span>
                                </div>
            <span class="ms-2">正在加载变量...</span>
                            </div>
            `;
    
    // 调用API获取变量 - 使用正式API端点而非测试端点
    fetch(`/api/datasets/${datasetId}/variables`, {
        method: 'GET',
        headers: {
            'X-Requested-With': 'XMLHttpRequest'
        },
        credentials: 'same-origin'
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('获取变量失败: ' + response.status + ' ' + response.statusText);
        }
        return response.json();
    })
    .then(data => {
        if (!data.success) {
            throw new Error(data.message || '获取变量失败');
        }
        
        // 处理变量数据
        const variables = data.variables || [];
        let continuousVars = [];
        let categoricalVars = [];
        
        // 分类变量
        variables.forEach(variable => {
            if (variable.type === 'continuous' || variable.type === 'number' || variable.type === 'float' || variable.type === 'integer') {
                continuousVars.push(variable);
                } else {
                categoricalVars.push(variable);
            }
        });
        
        // 构建变量选择器HTML
        let variablesHTML = '';
        
        if (continuousVars.length > 0) {
            variablesHTML += `<div class="variable-category">连续变量</div>
                             <div class="variable-selector">`;
            
            continuousVars.forEach(variable => {
                const checkboxName = toolType === 'hypothesis' ? 'hypothesis_variables' : 
                                    toolType === 'correlation' ? 'correlation_variables' : 'variables';
                variablesHTML += `<label><input type="checkbox" name="${checkboxName}" value="${variable.id}"> ${variable.name}</label>`;
            });
            
            variablesHTML += `</div>`;
        }
        
        if (categoricalVars.length > 0) {
            variablesHTML += `<div class="variable-category">分类变量</div>
                             <div class="variable-selector">`;
            
            categoricalVars.forEach(variable => {
                const checkboxName = toolType === 'hypothesis' ? 'hypothesis_variables' : 
                                    toolType === 'correlation' ? 'correlation_variables' : 'variables';
                variablesHTML += `<label><input type="checkbox" name="${checkboxName}" value="${variable.id}"> ${variable.name}</label>`;
            });
            
            variablesHTML += `</div>`;
        }
        
        // 如果没有变量
        if (variables.length === 0) {
            variablesHTML = `<div class="alert alert-info">该数据集没有可用的变量</div>`;
        }
        
        // 更新变量容器
        variablesContainer.innerHTML = variablesHTML;
        
        // 如果是假设检验，还需要更新分组变量下拉列表
        if (toolType === 'hypothesis') {
            const groupVarSelect = document.getElementById('group-variable');
            if (groupVarSelect) {
                // 清除现有选项
                while (groupVarSelect.options.length > 1) {
                    groupVarSelect.remove(1);
                }
                
                // 添加分类变量作为分组变量选项
                categoricalVars.forEach(variable => {
                    const option = document.createElement('option');
                    option.value = variable.id;
                    option.textContent = variable.name;
                    groupVarSelect.appendChild(option);
                });
                
                // 确保分组变量选择器可见
                const groupVarContainer = document.getElementById('group-variable-container');
                if (groupVarContainer) {
                    groupVarContainer.style.display = 'block';
                }
            }
        }
    })
    .catch(error => {
        console.error('加载变量失败:', error);
        
        // 显示错误信息，不使用模拟数据
        variablesContainer.innerHTML = `
                <div class="alert alert-danger">
                <strong>加载变量失败</strong>
                <p>${error.message}</p>
                <p>请检查您是否已登录，以及是否有权限访问此数据集。</p>
                <p>您可以尝试刷新页面或重新登录。</p>
                                </div>
            `;
        
        // 记录详细错误到控制台以便调试
        console.error('API请求详情:', {
            url: `/api/datasets/${datasetId}/variables`,
            datasetId: datasetId,
            toolType: toolType,
            errorMessage: error.message,
            errorStack: error.stack
        });
    });
}

// 添加假设检验表单提交处理
document.addEventListener('DOMContentLoaded', function() {
    const hypothesisForm = document.getElementById('hypothesisForm');
    if (hypothesisForm) {
        hypothesisForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            // 获取结果预览区域
            const resultPreview = document.querySelector('.result-preview');
            if (!resultPreview) {
                console.error('找不到结果预览区域');
                return;
            }
            
            // 获取表单数据
            const datasetId = document.getElementById('dataset-select-hypothesis').value;
            const testType = document.getElementById('test-type').value;
            const groupVariable = document.getElementById('group-variable').value;
            const alpha = parseFloat(document.querySelector('select[name="alpha"]').value);
            const hypothesis = document.querySelector('input[name="hypothesis"]:checked').value;
            
            // 获取选中的变量
            const selectedVariables = [];
            document.querySelectorAll('input[name="hypothesis_variables"]:checked').forEach(input => {
                selectedVariables.push(input.value);
            });
            
            // 验证表单数据
            if (!datasetId) {
                alert('请选择数据集');
                return;
            }
            
            if (selectedVariables.length === 0) {
                alert('请至少选择一个变量');
                return;
            }
            
            // 对于需要分组变量的检验类型，验证是否选择了分组变量
            const needsGroupVar = ['ttest', 'anova', 'chi2', 'fisher', 'wilcoxon', 'kruskal'].includes(testType);
            if (needsGroupVar && !groupVariable) {
                alert('此检验类型需要选择分组变量');
                return;
            }
            
            // 显示加载状态
            resultPreview.innerHTML = `
                <div class="loading-indicator">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">加载中...</span>
                                    </div>
                    <p>正在执行假设检验，请稍候...</p>
                                    </div>
            `;
            
            // 构建请求数据
            const requestData = {
                dataset_id: parseInt(datasetId),
                test_type: testType,
                variables: selectedVariables,
                group_variable: groupVariable,
                alpha: alpha,
                hypothesis: hypothesis
            };
            
            // 发送API请求
            fetch('/api/analysis/hypothesis', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify(requestData)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('执行检验失败: ' + response.status);
                }
                return response.json();
            })
            .then(data => {
                if (!data.success) {
                    throw new Error(data.message || '检验失败');
                }
                
                // 生成结果HTML
                let resultsHTML = `
                    <div class="result-content">
                        <h4>假设检验结果</h4>
                        <div class="table-responsive">
                            <table class="table table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th>变量</th>
                                        <th>检验类型</th>
                                        <th>统计量</th>
                                        <th>p值</th>
                                        <th>结论</th>
                                    </tr>
                                </thead>
                                <tbody>
                `;
                
                // 填充结果数据
                if (data.results && Array.isArray(data.results)) {
                    data.results.forEach(result => {
                        const pValue = parseFloat(result.p_value);
                        const isSignificant = pValue < alpha;
                        
                        resultsHTML += `
                            <tr>
                                <td>${result.variable_name || '未知变量'}</td>
                                <td>${getTestTypeDisplayName(testType)}</td>
                                <td>${formatStatValue(result.statistic)}</td>
                                <td>${formatPValue(pValue)}</td>
                                <td class="${isSignificant ? 'text-success' : 'text-secondary'}">
                                    ${isSignificant ? '拒绝原假设' : '接受原假设'}
                                </td>
                            </tr>
                        `;
                    });
                }
                
                resultsHTML += `
                                </tbody>
                            </table>
                                    </div>
                        <div class="mt-3 text-end">
                            <button class="clinical-button secondary" onclick="exportResults()">
                                <i class="bi bi-download"></i> 导出结果
                                        </button>
                                    </div>
                                    </div>
                `;
                
                resultPreview.innerHTML = resultsHTML;
            })
            .catch(error => {
                console.error('假设检验失败:', error);
                resultPreview.innerHTML = `
                    <div class="alert alert-danger">
                        <i class="bi bi-exclamation-triangle"></i> 检验失败: ${error.message}
                                </div>
                `;
            });
        });
        
        // 重置按钮
        const resetBtn = document.getElementById('resetHypothesisBtn');
        if (resetBtn) {
            resetBtn.addEventListener('click', function() {
                hypothesisForm.reset();
            });
        }
    }
    
    // 添加相关性分析表单提交处理
    const correlationForm = document.getElementById('correlationForm');
    if (correlationForm) {
        correlationForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            // 获取结果预览区域
            const resultPreview = document.querySelector('.result-preview');
            if (!resultPreview) {
                console.error('找不到结果预览区域');
                return;
            }
            
            // 获取表单数据
            const datasetId = document.getElementById('dataset-select-correlation').value;
            const correlationType = document.querySelector('select[name="correlation_type"]').value;
            const significanceTest = document.querySelector('input[name="significance_test"]').checked;
            
            // 获取选中的变量
            const selectedVariables = [];
            document.querySelectorAll('input[name="correlation_variables"]:checked').forEach(input => {
                selectedVariables.push(input.value);
            });
            
            // 获取选中的可视化选项
            const visualizationOptions = [];
            document.querySelectorAll('input[name="visualize"]:checked').forEach(input => {
                visualizationOptions.push(input.value);
            });
            
            // 验证表单数据
            if (!datasetId) {
                alert('请选择数据集');
                return;
            }
            
            if (selectedVariables.length < 2) {
                alert('请至少选择两个变量进行相关性分析');
                return;
            }
            
            // 显示加载状态
            resultPreview.innerHTML = `
                <div class="loading-indicator">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">加载中...</span>
                            </div>
                    <p>正在计算相关性，请稍候...</p>
                    </div>
            `;
            
            // 构建请求数据
            const requestData = {
                dataset_id: parseInt(datasetId),
                correlation_type: correlationType,
                variables: selectedVariables,
                significance_test: significanceTest,
                visualization: visualizationOptions
            };
            
            // 发送API请求
            fetch('/api/analysis/correlation', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify(requestData)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('计算相关性失败: ' + response.status);
                }
                return response.json();
            })
            .then(data => {
                if (!data.success) {
                    throw new Error(data.message || '相关性分析失败');
                }
                
                // 生成结果HTML
                let resultsHTML = `
                    <div class="result-content">
                        <h4>相关性分析结果</h4>
                `;
                
                // 如果有热力图数据，添加热力图
                if (data.heatmap_data && visualizationOptions.includes('heatmap')) {
                    resultsHTML += `
                        <div class="correlation-heatmap mb-4">
                            <h5>相关系数热力图</h5>
                            <div class="chart-container" style="position: relative; height:400px; width:100%">
                                <canvas id="correlationHeatmap"></canvas>
                </div>
            </div>
                    `;
                }
                
                // 添加相关系数表格
                resultsHTML += `
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>变量</th>
                `;
                
                // 添加表头变量
                selectedVariables.forEach(variable => {
                    resultsHTML += `<th>${variable}</th>`;
                });
                
                resultsHTML += `
                                </tr>
                            </thead>
                            <tbody>
                `;
                
                // 填充相关系数矩阵
                if (data.correlation_matrix) {
                    selectedVariables.forEach((rowVar, rowIndex) => {
                        resultsHTML += `<tr><td>${rowVar}</td>`;
                        
                        selectedVariables.forEach((colVar, colIndex) => {
                            const corrValue = data.correlation_matrix[rowIndex][colIndex];
                            const pValue = data.p_values && data.p_values[rowIndex][colIndex];
                            
                            // 根据相关系数值设置颜色
                            let cellClass = '';
                            if (rowIndex !== colIndex) {  // 不是对角线
                                if (Math.abs(corrValue) > 0.7) {
                                    cellClass = 'table-danger';  // 强相关
                                } else if (Math.abs(corrValue) > 0.4) {
                                    cellClass = 'table-warning';  // 中等相关
                                } else if (Math.abs(corrValue) > 0.2) {
                                    cellClass = 'table-info';  // 弱相关
                                }
                            }
                            
                            // 格式化显示
                            let cellContent = '';
                            if (rowIndex === colIndex) {
                                cellContent = '1.00';  // 对角线显示1
                            } else {
                                cellContent = corrValue.toFixed(2);
                                if (pValue !== undefined && significanceTest) {
                                    if (pValue < 0.001) cellContent += '<sup>***</sup>';
                                    else if (pValue < 0.01) cellContent += '<sup>**</sup>';
                                    else if (pValue < 0.05) cellContent += '<sup>*</sup>';
                                }
                            }
                            
                            resultsHTML += `<td class="${cellClass}">${cellContent}</td>`;
                        });
                        
                        resultsHTML += `</tr>`;
                    });
                }
                
                resultsHTML += `
                            </tbody>
                        </table>
                    </div>
                `;
                
                // 如果启用了显著性检验，添加图例
                if (significanceTest) {
                    resultsHTML += `
                        <div class="significance-legend mt-2 mb-4">
                            <small>
                                <span>显著性水平: </span>
                                <span><sup>*</sup> p &lt; 0.05</span>
                                <span><sup>**</sup> p &lt; 0.01</span>
                                <span><sup>***</sup> p &lt; 0.001</span>
                            </small>
                        </div>
                    `;
                }
                
                // 添加导出按钮
                resultsHTML += `
                        <div class="mt-3 text-end">
                            <button class="clinical-button secondary" onclick="exportResults()">
                                <i class="bi bi-download"></i> 导出结果
                            </button>
                                </div>
                            </div>
                `;
                
                resultPreview.innerHTML = resultsHTML;
                
                // 如果有热力图数据，绘制热力图
                if (data.heatmap_data && visualizationOptions.includes('heatmap')) {
                    try {
                        if (typeof Chart !== 'undefined') {
                            const ctx = document.getElementById('correlationHeatmap').getContext('2d');
                            
                            // 准备热力图数据
                            const heatmapData = {
                                labels: selectedVariables,
                                datasets: [{
                                    label: '相关系数',
                                    data: data.heatmap_data,
                                    backgroundColor: (context) => {
                                        const value = context.dataset.data[context.dataIndex];
                                        if (value === null) return 'rgba(0, 0, 0, 0)';
                                        
                                        // 根据相关系数值设置颜色
                                        const r = value < 0 ? 255 : 255 * (1 - Math.abs(value));
                                        const g = value < 0 ? 255 * (1 - Math.abs(value)) : 255 * (1 - Math.abs(value));
                                        const b = value < 0 ? 255 * (1 - Math.abs(value)) : 255;
                                        const alpha = 0.7;
                                        
                                        return `rgba(${r}, ${g}, ${b}, ${alpha})`;
                                    }
                                }]
                            };
                            
                            new Chart(ctx, {
                                type: 'matrix',
                                data: heatmapData,
                                options: {
                                    responsive: true,
                                    maintainAspectRatio: false,
                                    scales: {
                                        x: {
                                            title: {
                                                display: true,
                                                text: '变量'
                                            }
                                        },
                                        y: {
                                            title: {
                                                display: true,
                                                text: '变量'
                                            }
                                        }
                                    },
                                    plugins: {
                                        tooltip: {
                                            callbacks: {
                                                title: () => '',
                                                label: (context) => {
                                                    const value = context.dataset.data[context.dataIndex];
                                                    const i = Math.floor(context.dataIndex / selectedVariables.length);
                                                    const j = context.dataIndex % selectedVariables.length;
                                                    return `${selectedVariables[i]} 与 ${selectedVariables[j]} 的相关系数: ${value.toFixed(2)}`;
                                                }
                                            }
                                        },
                                        legend: {
                                            display: false
                                        }
                                    }
                                }
                            });
                        }
                    } catch (error) {
                        console.error('绘制热力图失败:', error);
                    }
                }
            })
            .catch(error => {
                console.error('相关性分析失败:', error);
                resultPreview.innerHTML = `
                    <div class="alert alert-danger">
                        <i class="bi bi-exclamation-triangle"></i> 相关性分析失败: ${error.message}
                            </div>
                `;
            });
        });
        
        // 重置按钮
        const resetBtn = document.getElementById('resetCorrelationBtn');
        if (resetBtn) {
            resetBtn.addEventListener('click', function() {
                correlationForm.reset();
            });
        }
    }
    
    // 添加生存分析表单提交处理
    const survivalForm = document.getElementById('survivalForm');
    if (survivalForm) {
        survivalForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            // 获取结果预览区域
            const resultPreview = document.querySelector('.result-preview');
            if (!resultPreview) {
                console.error('找不到结果预览区域');
                return;
            }
            
            // 获取表单数据
            const datasetId = document.getElementById('dataset-select-survival').value;
            const survivalMethod = document.querySelector('select[name="survival_method"]').value;
            const timeVariable = document.querySelector('select[name="time_variable"]').value;
            const eventVariable = document.querySelector('select[name="event_variable"]').value;
            
            // 验证表单数据
            if (!datasetId) {
                alert('请选择数据集');
                return;
            }
            
            if (!timeVariable) {
                alert('请选择时间变量');
                return;
            }
            
            if (!eventVariable) {
                alert('请选择事件变量');
                return;
            }
            
            // 显示加载状态
            resultPreview.innerHTML = `
                <div class="loading-indicator">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">加载中...</span>
                                    </div>
                    <p>正在进行生存分析，请稍候...</p>
                                    </div>
            `;
            
            // 构建请求数据
            const requestData = {
                dataset_id: parseInt(datasetId),
                method: survivalMethod,
                time_variable: timeVariable,
                event_variable: eventVariable,
                group_variable: document.querySelector('select[name="group_variable"]')?.value || null
            };
            
            // 发送API请求
            fetch('/api/analysis/survival', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify(requestData)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('生存分析失败: ' + response.status);
                }
                return response.json();
            })
            .then(data => {
                if (!data.success) {
                    throw new Error(data.message || '生存分析失败');
                }
                
                // 生成结果HTML
                let resultsHTML = `
                    <div class="result-content">
                        <h4>生存分析结果</h4>
                        <div class="survival-curve mb-4">
                            <h5>Kaplan-Meier生存曲线</h5>
                            <div class="chart-container" style="position: relative; height:400px; width:100%">
                                <canvas id="survivalCurve"></canvas>
                                    </div>
                                </div>
                `;
                
                // 添加统计信息表格
                resultsHTML += `
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>统计指标</th>
                                    <th>值</th>
                                </tr>
                            </thead>
                            <tbody>
                `;
                
                // 填充统计信息
                if (data.stats) {
                    const stats = data.stats;
                    
                    if (stats.median_survival_time !== undefined) {
                        resultsHTML += `
                            <tr>
                                <td>中位生存时间</td>
                                <td>${stats.median_survival_time.toFixed(2)} ${data.time_unit || '天'}</td>
                            </tr>
                        `;
                    }
                    
                    if (stats.events_count !== undefined) {
                        resultsHTML += `
                            <tr>
                                <td>事件数量</td>
                                <td>${stats.events_count}</td>
                            </tr>
                        `;
                    }
                    
                    if (stats.total_subjects !== undefined) {
                        resultsHTML += `
                            <tr>
                                <td>总样本数</td>
                                <td>${stats.total_subjects}</td>
                            </tr>
                        `;
                    }
                    
                    if (stats.censored_count !== undefined) {
                        resultsHTML += `
                            <tr>
                                <td>删失数量</td>
                                <td>${stats.censored_count}</td>
                            </tr>
                        `;
                    }
                }
                
                resultsHTML += `
                            </tbody>
                        </table>
                            </div>
                `;
                
                // 如果是Cox回归，添加风险比表格
                if (survivalMethod === 'cox_regression' && data.cox_results) {
                    resultsHTML += `
                        <div class="mt-4">
                            <h5>Cox比例风险回归结果</h5>
                            <div class="table-responsive">
                                <table class="table table-bordered table-hover">
                                    <thead>
                                        <tr>
                                            <th>变量</th>
                                            <th>风险比(HR)</th>
                                            <th>95% CI</th>
                                            <th>p值</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                    `;
                    
                    // 填充Cox回归结果
                    data.cox_results.forEach(result => {
                        const pValue = result.p_value;
                        const isSignificant = pValue < 0.05;
                        
                        resultsHTML += `
                            <tr>
                                <td>${result.variable}</td>
                                <td>${result.hazard_ratio.toFixed(2)}</td>
                                <td>${result.ci_lower.toFixed(2)} - ${result.ci_upper.toFixed(2)}</td>
                                <td class="${isSignificant ? 'text-success' : 'text-secondary'}">
                                    ${formatPValue(pValue)}
                                </td>
                            </tr>
                        `;
                    });
                    
                    resultsHTML += `
                                    </tbody>
                                </table>
                            </div>
                    </div>
                    `;
                }
                
                // 添加导出按钮
                resultsHTML += `
                    <div class="mt-3 text-end">
                        <button class="clinical-button secondary" onclick="exportResults()">
                            <i class="bi bi-download"></i> 导出结果
                        </button>
                </div>
            </div>
                `;
                
                resultPreview.innerHTML = resultsHTML;
                
                // 绘制生存曲线
                try {
                    if (typeof Chart !== 'undefined' && data.survival_curve) {
                        const ctx = document.getElementById('survivalCurve').getContext('2d');
                        
                        // 准备生存曲线数据
                        const datasets = [];
                        
                        // 如果有分组，为每个组创建一个数据集
                        if (data.group_survival && data.group_labels) {
                            data.group_labels.forEach((group, index) => {
                                const groupData = data.group_survival[index];
                                const colorIndex = index % 5;
                                const colors = [
                                    'rgba(54, 162, 235, 1)',
                                    'rgba(255, 99, 132, 1)',
                                    'rgba(75, 192, 192, 1)',
                                    'rgba(255, 159, 64, 1)',
                                    'rgba(153, 102, 255, 1)'
                                ];
                                
                                datasets.push({
                                    label: `组 ${group}`,
                                    data: groupData.map((point, i) => ({
                                        x: data.time_points[i],
                                        y: point
                                    })),
                                    borderColor: colors[colorIndex],
                                    backgroundColor: colors[colorIndex].replace('1)', '0.1)'),
                                    borderWidth: 2,
                                    pointRadius: 0,
                                    stepped: true
                                });
                            });
                        } else {
                            // 单个生存曲线
                            datasets.push({
                                label: '生存概率',
                                data: data.survival_curve.map((point, i) => ({
                                    x: data.time_points[i],
                                    y: point
                                })),
                                borderColor: 'rgba(54, 162, 235, 1)',
                                backgroundColor: 'rgba(54, 162, 235, 0.1)',
                                borderWidth: 2,
                                pointRadius: 0,
                                stepped: true
                            });
                        }
                        
                        new Chart(ctx, {
                            type: 'line',
                            data: {
                                datasets: datasets
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false,
                                scales: {
                                    x: {
                                        title: {
                                            display: true,
                                            text: `时间 (${data.time_unit || '天'})`
                                        },
                                        min: 0
                                    },
                                    y: {
                                        title: {
                                            display: true,
                                            text: '生存概率'
                                        },
                                        min: 0,
                                        max: 1
                                    }
                                },
                                plugins: {
                                    title: {
                                        display: true,
                                        text: 'Kaplan-Meier生存曲线'
                                    },
                                    tooltip: {
                                        callbacks: {
                                            label: (context) => {
                                                const point = context.raw;
                                                return `时间: ${point.x} ${data.time_unit || '天'}, 生存概率: ${point.y.toFixed(3)}`;
                                            }
                                        }
                                    }
                                }
                            }
                        });
                    }
                } catch (error) {
                    console.error('绘制生存曲线失败:', error);
                }
            })
            .catch(error => {
                console.error('生存分析失败:', error);
                resultPreview.innerHTML = `
                    <div class="alert alert-danger">
                        <i class="bi bi-exclamation-triangle"></i> 生存分析失败: ${error.message}
        </div>
                `;
            });
        });
        
        // 重置按钮
        const resetBtn = document.getElementById('resetSurvivalBtn');
        if (resetBtn) {
            resetBtn.addEventListener('click', function() {
                survivalForm.reset();
            });
        }
    }
    
    // 添加风险评估表单提交处理
    const riskForm = document.getElementById('riskForm');
    if (riskForm) {
        riskForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            // 获取结果预览区域
            const resultPreview = document.querySelector('.result-preview');
            if (!resultPreview) {
                console.error('找不到结果预览区域');
                return;
            }
            
            // 获取表单数据
            const datasetId = document.getElementById('dataset-select-risk').value;
            const modelType = document.querySelector('select[name="model_type"]').value;
            const targetVariable = document.querySelector('select[name="target_variable"]').value;
            
            // 验证表单数据
            if (!datasetId) {
                alert('请选择数据集');
                return;
            }
            
            if (!targetVariable) {
                alert('请选择目标变量');
                return;
            }
            
            // 显示加载状态
            resultPreview.innerHTML = `
                <div class="loading-indicator">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">加载中...</span>
    </div>
                    <p>正在构建风险评估模型，请稍候...</p>
</div>
            `;
            
            // 构建请求数据
            const requestData = {
                dataset_id: parseInt(datasetId),
                model_type: modelType,
                target_variable: targetVariable,
                predictor_variables: ['age', 'gender', 'bmi', 'smoking'], // 这里应该动态获取，但目前表单中没有选择项
                validation_method: 'cross_validation',
                validation_params: {
                    cv_folds: 5
                }
            };
            
            // 发送API请求
            fetch('/api/analysis/risk', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify(requestData)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('风险评估失败: ' + response.status);
                }
                return response.json();
            })
            .then(data => {
                if (!data.success) {
                    throw new Error(data.message || '风险评估失败');
                }
                
                // 生成结果HTML
                let resultsHTML = `
                    <div class="result-content">
                        <h4>风险评估模型结果</h4>
                        
                        <div class="model-performance mb-4">
                            <h5>模型性能</h5>
                            <div class="table-responsive">
                                <table class="table table-bordered table-hover">
                                    <thead>
                                        <tr>
                                            <th>指标</th>
                                            <th>值</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                `;
                
                // 填充模型性能指标
                if (data.performance) {
                    const perf = data.performance;
                    
                    if (perf.auc !== undefined) {
                        resultsHTML += `
                            <tr>
                                <td>AUC (ROC曲线下面积)</td>
                                <td>${perf.auc.toFixed(3)}</td>
                            </tr>
                        `;
                    }
                    
                    if (perf.accuracy !== undefined) {
                        resultsHTML += `
                            <tr>
                                <td>准确率 (Accuracy)</td>
                                <td>${perf.accuracy.toFixed(3)}</td>
                            </tr>
                        `;
                    }
                    
                    if (perf.sensitivity !== undefined) {
                        resultsHTML += `
                            <tr>
                                <td>敏感性 (Sensitivity)</td>
                                <td>${perf.sensitivity.toFixed(3)}</td>
                            </tr>
                        `;
                    }
                    
                    if (perf.specificity !== undefined) {
                        resultsHTML += `
                            <tr>
                                <td>特异性 (Specificity)</td>
                                <td>${perf.specificity.toFixed(3)}</td>
                            </tr>
                        `;
                    }
                    
                    if (perf.ppv !== undefined) {
                        resultsHTML += `
                            <tr>
                                <td>阳性预测值 (PPV)</td>
                                <td>${perf.ppv.toFixed(3)}</td>
                            </tr>
                        `;
                    }
                    
                    if (perf.npv !== undefined) {
                        resultsHTML += `
                            <tr>
                                <td>阴性预测值 (NPV)</td>
                                <td>${perf.npv.toFixed(3)}</td>
                            </tr>
                        `;
                    }
                }
                
                resultsHTML += `
                                    </tbody>
                                </table>
            </div>
                </div>
                `;
                
                // 添加ROC曲线
                if (data.roc_data) {
                    resultsHTML += `
                        <div class="roc-curve mb-4">
                            <h5>ROC曲线</h5>
                            <div class="chart-container" style="position: relative; height:400px; width:100%">
                                <canvas id="rocCurve"></canvas>
                </div>
                </div>
                    `;
                }
                
                // 添加特征重要性
                if (data.feature_importance && typeof Chart !== 'undefined') {
                    try {
                        const ctx = document.getElementById('featureImportance').getContext('2d');
                        
                        // 按重要性排序
                        const sortedFeatures = Object.entries(data.feature_importance)
                            .sort((a, b) => b[1] - a[1])
                            .slice(0, 10); // 只显示前10个特征
                        
                        const featureNames = sortedFeatures.map(f => f[0]);
                        const importanceValues = sortedFeatures.map(f => f[1]);
                        
                        new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: featureNames,
                                datasets: [{
                                    label: '特征重要性',
                                    data: importanceValues,
                                    backgroundColor: 'rgba(75, 192, 192, 0.6)',
                                    borderColor: 'rgba(75, 192, 192, 1)',
                                    borderWidth: 1
                                }]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false,
                                indexAxis: 'y', // 水平条形图
                                scales: {
                                    x: {
                                        title: {
                                            display: true,
                                            text: '重要性得分'
                                        },
                                        min: 0
                                    },
                                    y: {
                                        title: {
                                            display: true,
                                            text: '特征'
                                        }
                                    }
                                },
                                plugins: {
                                    title: {
                                        display: true,
                                        text: '特征重要性排名'
                                    }
                                }
                            }
                        });
                    } catch (error) {
                        console.error('绘制特征重要性图失败:', error);
                    }
                }
                
                // 添加风险分层结果
                if (data.risk_stratification) {
                    resultsHTML += `
                        <div class="risk-stratification mb-4">
                            <h5>风险分层</h5>
                            <div class="table-responsive">
                                <table class="table table-bordered table-hover">
                                    <thead>
                                        <tr>
                                            <th>风险等级</th>
                                            <th>风险范围</th>
                                            <th>患者数量</th>
                                            <th>占比</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                    `;
                    
                    // 填充风险分层数据
                    data.risk_stratification.forEach(stratum => {
                        resultsHTML += `
                            <tr>
                                <td>${stratum.level}</td>
                                <td>${stratum.range[0].toFixed(2)} - ${stratum.range[1].toFixed(2)}</td>
                                <td>${stratum.count}</td>
                                <td>${(stratum.percentage * 100).toFixed(1)}%</td>
                            </tr>
                        `;
                    });
                    
                    resultsHTML += `
                                    </tbody>
                                </table>
                </div>
                </div>
                    `;
                }
                
                // 添加导出按钮
                resultsHTML += `
                    <div class="mt-3 text-end">
                        <button class="clinical-button secondary" onclick="exportResults()">
                            <i class="bi bi-download"></i> 导出结果
                        </button>
                </div>
                </div>
                `;
                
                resultPreview.innerHTML = resultsHTML;
                
                // 绘制ROC曲线
                if (data.roc_data && typeof Chart !== 'undefined') {
                    try {
                        const ctx = document.getElementById('rocCurve').getContext('2d');
                        
                        new Chart(ctx, {
                            type: 'line',
                            data: {
                                datasets: [{
                                    label: 'ROC曲线',
                                    data: data.roc_data.map(point => ({
                                        x: point[0], // FPR
                                        y: point[1]  // TPR
                                    })),
                                    borderColor: 'rgba(54, 162, 235, 1)',
                                    backgroundColor: 'rgba(54, 162, 235, 0.1)',
                                    borderWidth: 2,
                                    pointRadius: 0
                                }, {
                                    label: '随机猜测',
                                    data: [
                                        { x: 0, y: 0 },
                                        { x: 1, y: 1 }
                                    ],
                                    borderColor: 'rgba(128, 128, 128, 0.5)',
                                    borderWidth: 1,
                                    borderDash: [5, 5],
                                    pointRadius: 0
                                }]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false,
                                scales: {
                                    x: {
                                        title: {
                                            display: true,
                                            text: '假阳性率 (1 - 特异性)'
                                        },
                                        min: 0,
                                        max: 1
                                    },
                                    y: {
                                        title: {
                                            display: true,
                                            text: '真阳性率 (敏感性)'
                                        },
                                        min: 0,
                                        max: 1
                                    }
                                },
                                plugins: {
                                    title: {
                                        display: true,
                                        text: `ROC曲线 (AUC = ${data.performance.auc.toFixed(3)})`
                                    },
                                    tooltip: {
                                        callbacks: {
                                            label: (context) => {
                                                if (context.datasetIndex === 0) {
                                                    const point = context.raw;
                                                    return `FPR: ${point.x.toFixed(3)}, TPR: ${point.y.toFixed(3)}`;
                                                }
                                                return '';
                                            }
                                        }
                                    }
                                }
                            }
                        });
                    } catch (error) {
                        console.error('绘制ROC曲线失败:', error);
                    }
                }
            })
            .catch(error => {
                console.error('风险评估失败:', error);
                resultPreview.innerHTML = `
                    <div class="alert alert-danger">
                        <i class="bi bi-exclamation-triangle"></i> 风险评估失败: ${error.message}
                </div>
                `;
            });
        });
        
        // 重置按钮
        const resetBtn = document.getElementById('resetRiskBtn');
        if (resetBtn) {
            resetBtn.addEventListener('click', function() {
                riskForm.reset();
            });
        }
    }
    
    // 添加结局预测表单提交处理
    const outcomeForm = document.getElementById('outcomeForm');
    if (outcomeForm) {
        outcomeForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            // 获取结果预览区域
            const resultPreview = document.querySelector('.result-preview');
            if (!resultPreview) {
                console.error('找不到结果预览区域');
                return;
            }
            
            // 获取表单数据
            const datasetId = document.getElementById('dataset-select-outcome').value;
            const outcomeType = document.querySelector('select[name="outcome_type"]').value;
            
            // 验证表单数据
            if (!datasetId) {
                alert('请选择数据集');
                return;
            }
            
            // 显示加载状态
            resultPreview.innerHTML = `
                <div class="loading-indicator">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">加载中...</span>
                </div>
                    <p>正在预测结局，请稍候...</p>
                </div>
            `;
            
            // 构建请求数据
            const requestData = {
                dataset_id: parseInt(datasetId),
                outcome_type: outcomeType
            };
            
            // 发送API请求
            fetch('/api/analysis/outcome', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify(requestData)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('预测结局失败: ' + response.status);
                }
                return response.json();
            })
            .then(data => {
                if (!data.success) {
                    throw new Error(data.message || '预测失败');
                }
                
                // 生成结果HTML
                let resultsHTML = `
                    <div class="result-content">
                        <h4>结局预测结果</h4>
                        <div class="outcome-prediction mb-4">
                            <h5>预测结果</h5>
                            <p>${data.prediction}</p>
                </div>
                        <div class="mt-3 text-end">
                            <button class="clinical-button secondary" onclick="exportResults()">
                                <i class="bi bi-download"></i> 导出结果
                            </button>
                </div>
                </div>
                `;
                
                resultPreview.innerHTML = resultsHTML;
            })
            .catch(error => {
                console.error('预测结局失败:', error);
                resultPreview.innerHTML = `
                    <div class="alert alert-danger">
                        <i class="bi bi-exclamation-triangle"></i> 预测失败: ${error.message}
                </div>
                `;
            });
        });
        
        // 重置按钮
        const resetBtn = document.getElementById('resetOutcomeBtn');
        if (resetBtn) {
            resetBtn.addEventListener('click', function() {
                outcomeForm.reset();
            });
        }
    }
    
    // 添加图表生成表单提交处理
    const chartsForm = document.getElementById('chartsForm');
    if (chartsForm) {
        chartsForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            // 获取结果预览区域
            const resultPreview = document.querySelector('.result-preview');
            if (!resultPreview) {
                console.error('找不到结果预览区域');
                return;
            }
            
            // 获取表单数据
            const datasetId = document.getElementById('dataset-select-charts').value;
            const chartType = document.querySelector('select[name="chart_type"]').value;
            
            // 验证表单数据
            if (!datasetId) {
                alert('请选择数据集');
                return;
            }
            
            // 显示加载状态
            resultPreview.innerHTML = `
                <div class="loading-indicator">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">加载中...</span>
                </div>
                    <p>正在生成图表，请稍候...</p>
                </div>
            `;
            
            // 构建请求数据
            const requestData = {
                dataset_id: parseInt(datasetId),
                chart_type: chartType
            };
            
            // 发送API请求
            fetch('/api/analysis/charts', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify(requestData)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('生成图表失败: ' + response.status);
                }
                return response.json();
            })
            .then(data => {
                if (!data.success) {
                    throw new Error(data.message || '生成失败');
                }
                
                // 生成图表HTML
                let chartHTML = `
                    <div class="chart-container" style="position: relative; height:400px; width:100%">
                        <canvas id="chartCanvas"></canvas>
                </div>
                `;
                
                // 将图表数据添加到HTML中
                chartHTML += `
                    <script>
                        document.addEventListener('DOMContentLoaded', function() {
                            const chartCanvas = document.getElementById('chartCanvas');
                            const chartData = ${JSON.stringify(data.chart_data)};
                            const chartType = '${chartType}';
                            
                            // 根据图表类型生成图表
                            switch(chartType) {
                                case 'bar':
                                    generateBarChart(chartCanvas, chartData);
                                    break;
                                case 'line':
                                    generateLineChart(chartCanvas, chartData);
                                    break;
                                case 'scatter':
                                    generateScatterPlot(chartCanvas, chartData);
                                    break;
                                case 'pie':
                                    generatePieChart(chartCanvas, chartData);
                                    break;
                                case 'box':
                                    generateBoxPlot(chartCanvas, chartData);
                                    break;
                                case 'heatmap':
                                    generateHeatmap(chartCanvas, chartData);
                                    break;
                                default:
                                    console.error('不支持的图表类型:', chartType);
                            }
                        });
                    </script>
                `;
                
                resultPreview.innerHTML = chartHTML;
            })
            .catch(error => {
                console.error('生成图表失败:', error);
                resultPreview.innerHTML = `
                    <div class="alert alert-danger">
                        <i class="bi bi-exclamation-triangle"></i> 生成失败: ${error.message}
                </div>
                `;
            });
        });
        
        // 重置按钮
        const resetBtn = document.getElementById('resetChartsBtn');
        if (resetBtn) {
            resetBtn.addEventListener('click', function() {
                chartsForm.reset();
            });
        }
    }
    
    // 添加自动报告表单提交处理
    const reportsForm = document.getElementById('reportsForm');
    if (reportsForm) {
        reportsForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            // 获取结果预览区域
            const resultPreview = document.querySelector('.result-preview');
            if (!resultPreview) {
                console.error('找不到结果预览区域');
                return;
            }
            
            // 获取表单数据
            const datasetId = document.getElementById('dataset-select-reports').value;
            const reportType = document.querySelector('select[name="report_type"]').value;
            
            // 验证表单数据
            if (!datasetId) {
                alert('请选择数据集');
                return;
            }
            
            // 显示加载状态
            resultPreview.innerHTML = `
                <div class="loading-indicator">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">加载中...</span>
                </div>
                    <p>正在生成报告，请稍候...</p>
                </div>
            `;
            
            // 构建请求数据
            const requestData = {
                dataset_id: parseInt(datasetId),
                report_type: reportType
            };
            
            // 发送API请求
            fetch('/api/analysis/reports', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify(requestData)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('生成报告失败: ' + response.status);
                }
                return response.json();
            })
            .then(data => {
                if (!data.success) {
                    throw new Error(data.message || '生成失败');
                }
                
                // 生成报告HTML
                let reportHTML = `
                    <div class="report-content">
                        <h4>报告内容</h4>
                        <div class="report-body">
                            ${data.report}
                </div>
                        <div class="mt-3 text-end">
                            <button class="clinical-button secondary" onclick="exportResults()">
                                <i class="bi bi-download"></i> 导出报告
                            </button>
                </div>
                </div>
                `;
                
                resultPreview.innerHTML = reportHTML;
            })
            .catch(error => {
                console.error('生成报告失败:', error);
                resultPreview.innerHTML = `
                    <div class="alert alert-danger">
                        <i class="bi bi-exclamation-triangle"></i> 生成失败: ${error.message}
                </div>
                `;
            });
        });
        
        // 重置按钮
        const resetBtn = document.getElementById('resetReportsBtn');
        if (resetBtn) {
            resetBtn.addEventListener('click', function() {
                reportsForm.reset();
            });
        }
    }
});

    // 获取检验类型的显示名称
    function getTestTypeDisplayName(testType) {
        const testNames = {
            'ttest': 't检验',
            'paired_ttest': '配对t检验',
            'anova': '方差分析',
            'chi2': '卡方检验',
            'fisher': 'Fisher精确检验',
            'wilcoxon': 'Wilcoxon秩和检验',
            'kruskal': 'Kruskal-Wallis检验'
        };
        return testNames[testType] || testType;
    }

    // 格式化p值
    function formatPValue(pValue) {
        if (pValue === null || pValue === undefined) {
            return 'N/A';
        }
        
        if (pValue < 0.001) {
            return 'p < 0.001';
        } else {
            return 'p = ' + pValue.toFixed(3);
        }
    }
</script>
{% endblock %}